<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0" name=""
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        PMD Plugin preferences rule set
        Priority means: 1 – error, high priority, 2 – error,
        normal priority, 3 – warning, high priority, 4 – warning,
        normal priority and 5 – information.
    </description>
    <rule ref="rulesets/java/typeresolution.xml/LooseCoupling">
        <priority>3</priority>
    </rule>
    <rule
            ref="rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/typeresolution.xml/UnusedImports">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/typeresolution.xml/SignatureDeclareThrowsException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/ShortVariable">
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    //VariableDeclaratorId[string-length(@Image) &lt; 3]
                </value>
            </property>
        </properties>
    </rule>
    <rule ref="rulesets/java/naming.xml/LongVariable">
        <priority>4</priority>
        <properties>
            <property name="xpath">
                <value>
                    //VariableDeclaratorId[string-length(@Image) > 40]
                </value>
            </property>
        </properties>
    </rule>
    <rule ref="rulesets/java/naming.xml/ShortMethodName">
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    //MethodDeclarator[string-length(@Image) &lt; 2]
                </value>
            </property>
        </properties>
    </rule>
    <rule ref="rulesets/java/naming.xml/VariableNamingConventions">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodNamingConventions">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AbstractNaming">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/NoPackage">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/PackageCase">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MisleadingVariableName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/BooleanGetMethodName">
        <priority>1</priority>
    </rule>

    <rule ref="rulesets/java/design.xml/UseUtilityClass">
        <priority>1</priority>
        <!-- Ignore check for spring boot application -->
        <properties>
            <property name="violationSuppressXPath"
                      value="//ClassOrInterfaceDeclaration/preceding-sibling::Annotation/MarkerAnnotation/Name[@Image='SpringBootApplication']"/>
        </properties>
    </rule>

    <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SwitchDensity">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AccessorClassGeneration">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CloseResource">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonStaticInitializer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/BadComparison">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/EqualsNull">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/IdempotentOperations">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ImmutableField">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingBreakInSwitch">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyConditional">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton">
        <priority>1</priority>
    </rule>

    <rule ref="rulesets/java/design.xml/UncommentedEmptyMethodBody">
        <priority>1</priority>
    </rule>

    <rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidConstantsInterface">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml">
        <exclude name="ConfusingTernary"/>
    </rule>
    <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">
        <priority>1</priority>
    </rule>

    <rule ref="rulesets/java/design.xml/PreserveStackTrace">
        <priority>1</priority>
    </rule>

    <rule
            ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
        <priority>1</priority>
    </rule>

    <rule
            ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SingularField">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
        <priority>2</priority>
    </rule>
    <rule
            ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
        <priority>3</priority>
    </rule>
    <rule
            ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingGenericException">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/strictexception.xml/AvoidLosingExceptionInformation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/SystemPrintln">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
        <priority>1</priority>
        <properties>
            <property name="skipAnnotations">
                <value>true</value>
            </property>
            <property name="maxDuplicateLiterals">
                <value>4</value>
            </property>
        </properties>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AppendCharacterWithChar">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidStringBufferField">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ByteInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ShortInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/LongInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseBeforeAnnotation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseAfterAnnotation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/JUnit4TestShouldUseTestAnnotation">
        <priority>3</priority>
    </rule>
    <rule
            ref="rulesets/java/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/JUnitUseExpected">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/UseProperClassLoader">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/MDBAndSessionBeanNamingConvention">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/RemoteSessionInterfaceNamingConvention">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/LocalInterfaceSessionNamingConvention">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/LocalHomeNamingConvention">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/RemoteInterfaceNamingConvention">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/DoNotCallSystemExit">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/StaticEJBFieldShouldBeFinal">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/j2ee.xml/DoNotUseThreads">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
        <priority>2</priority>
    </rule>
    <rule
            ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AddEmptyString">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/PrematureDeclaration">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyIfStmt">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyTryBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySwitchStatements">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessParentheses">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/JumbledIncrementer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/DoubleCheckedLocking">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
        <priority>1</priority>
    </rule>
    <rule
            ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidThreadGroup">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CheckResultSet">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ExtendsObject">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CheckSkipResult">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidBranchingStatementAsLastInLoop">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/DontCallThreadRun">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/DontUseFloatTypeForLoopIndices">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/DuplicateImports">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/DontImportJavaLang">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/UnusedImports">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/ImportFromSamePackage">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/UnnecessaryFullyQualifiedName">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/TooManyStaticImports">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/JUnitStaticSuite">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/JUnitSpelling">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/JUnitAssertionsShouldIncludeMessage">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/UseAssertEqualsInsteadOfAssertTrue">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/UseAssertSameInsteadOfAssertTrue">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/NullAssignment">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/OnlyOneReturn">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AssignmentInOperand">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DontImportSun">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/CallSuperInConstructor">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DefaultPackage">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/BooleanInversion">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml">
        <exclude name="DataflowAnomalyAnalysis"/>
        <exclude name="UnnecessaryConstructor"/>
        <exclude name="AvoidFinalLocalVariable"/>
        <exclude name="AtLeastOneConstructor"/>
    </rule>
    <rule
            ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NPathComplexity">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
        <priority>4</priority>
        <properties>
            <property name="reportLevel">
                <value>9</value>
            </property>
            <property name="showClassesComplexity">
                <value>true</value>
            </property>
            <property name="showMethodsComplexity">
                <value>true</value>
            </property>
        </properties>
    </rule>
    <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyFields">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssConstructorCount">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/TooManyMethods">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/javabeans.xml/BeanMembersShouldSerialize">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/javabeans.xml/MissingSerialVersionUID">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/ProperCloneImplementation">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
        <priority>1</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable">
        <priority>1</priority>
    </rule>
</ruleset>

